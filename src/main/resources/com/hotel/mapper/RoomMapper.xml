<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotel.mapper.RoomMapper">

	<!-- 객실 상세페이지 -->
	<select id="getRoomById" resultType="com.hotel.domain.RoomVO">
		SELECT
		ri_id AS riId,
		ri_type
		AS riType,
		ri_name AS riName,
		ri_desc AS riDesc,
		ri_person AS riPerson,
		ri_maxperson AS riMaxperson,
		ri_area AS riArea,
		ri_bed AS riBed,
		ri_bedcnt AS riBedcnt,
		ri_price AS
		riPrice,
		ri_bedroom AS riBedroom,
		ri_bathroom AS
		riBathroom,
		ri_show AS riShow,
		ri_delete AS riDelete
		FROM t_room_info
		WHERE si_id = #{siId} AND
		ri_id = #{riId}
	</select>

	<!-- 객실 편의시설 목록 조회 -->
	<select id="getFacilitiesByRoomId"
		resultType="com.hotel.domain.FacilityVO">
		SELECT
		f.fi_id AS fiId,
		f.fi_name AS fiName,
		f.fi_icon AS
		fiIcon
		FROM t_facility_info f
		JOIN t_room_facility_rel rfr ON f.fi_id =
		rfr.fi_id
		WHERE rfr.ri_id = #{riId}
		AND rfr.si_id = #{siId}
	</select>

	<!-- 객실 어메니티 목록 조회 -->
	<select id="getAmenitiesByRoomId"
		resultType="com.hotel.domain.AmenityVO">
		SELECT
		a.ai_idx AS aiIdx,
		a.ra_name AS raName
		FROM
		t_amenities_info a
		JOIN
		t_room_amenities ra ON a.ai_idx = ra.ai_idx
		WHERE
		ra.si_id = #{siId}
		AND
		ra.ri_id = #{riId}
	</select>

	<!-- 상세페이지 객실 제외 나머지 객실 목록 조회 -->
	<select id="getOtherRoomsByStayId"
		resultType="com.hotel.domain.RoomVO">
		SELECT
		ri_id AS riId,
		ri_type AS riType,
		ri_name AS riName,
		ri_desc AS riDesc,
		ri_person AS riPerson,
		ri_maxperson AS riMaxperson,
		ri_area AS riArea,
		ri_bed AS riBed,
		ri_bedcnt AS riBedcnt,
		ri_price AS
		riPrice,
		ri_bedroom AS riBedroom,
		ri_bathroom AS
		riBathroom
		FROM
		t_room_info
		WHERE si_id = #{siId}
		AND ri_id != #{riId}
	</select>

	<!-- 어메니티 목록 조회 -->
	<select id="getAllAmenities"
		resultType="com.hotel.domain.AmenityVO">
		SELECT ai_idx AS aiIdx, ra_name AS raName FROM
		t_amenities_info ORDER BY ai_idx
	</select>

	<select id="getRoomPhotos"
		resultType="com.hotel.domain.RoomPhotoVO">
		SELECT sp_idx AS spIdx,
		sp_url AS spUrl, si_id AS siId,
		ri_id AS riId
		FROM t_room_photo
		WHERE
		si_id = #{siId}
		AND ri_id = #{riId}
		ORDER BY sp_idx
	</select>

	<select id="getMainPhotosForAllRooms"
		resultType="com.hotel.domain.RoomPhotoVO">
		SELECT sp_idx AS spIdx,
		sp_url AS spUrl,
		si_id AS siId,
		ri_id
		AS riId
		FROM t_room_photo
		WHERE si_id = #{siId}
		AND sp_idx = 0
	</select>


	<!-- admin 객실 등록 -->
	<insert id="insertRoom" parameterType="com.hotel.domain.RoomVO">
		<!-- siId에서 riId 최대값+1 조회 -->
		<selectKey keyProperty="riId" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(ri_id), 0) + 1
			FROM t_room_info
			WHERE si_id =
			#{siId}
		</selectKey>

		INSERT INTO t_room_info (
		si_id, ri_id, ri_type, ri_name, ri_desc,
		ri_person,
		ri_maxperson,
		ri_area, ri_bed, ri_bedcnt,
		ri_price,
		ri_bedroom,
		ri_bathroom, ri_show,
		ri_delete, ri_date
		) VALUES (
		#{siId},
		#{riId}, #{riType},
		#{riName}, #{riDesc},
		#{riPerson},
		#{riMaxperson},
		#{riArea}, #{riBed},
		#{riBedcnt},
		#{riPrice},
		#{riBedroom},
		#{riBathroom}, #{riShow},
		#{riDelete},
		SYSDATE
		)
	</insert>

	<insert id="insertRoomFacility">
		INSERT INTO t_room_facility_rel (si_id, ri_id, fi_id)
		VALUES (#{siId}, #{riId}, #{fiId})
	</insert>

	<insert id="insertRoomAmenity">
		INSERT INTO t_room_amenities (si_id, ri_id, ai_idx)
		VALUES (#{siId}, #{riId}, #{aiIdx, jdbcType=INTEGER})
	</insert>

	<insert id="insertRoomPhoto"
		parameterType="com.hotel.domain.RoomPhotoVO">
		INSERT INTO t_room_photo (si_id, ri_id, sp_idx, sp_url)
		VALUES (#{siId}, #{riId}, #{spIdx}, #{spUrl})
	</insert>

	<update id="updateRoom">
		UPDATE t_room_info
		SET
		ri_type = #{riType},
		ri_name =
		#{riName},
		ri_desc = #{riDesc},
		ri_person = #{riPerson},
		ri_maxperson =
		#{riMaxperson},
		ri_area = #{riArea},
		ri_bed = #{riBed},
		ri_bedcnt =
		#{riBedcnt},
		ri_price = #{riPrice},
		ri_show = #{riShow},
		ri_bedroom =
		#{riBedroom},
		ri_bathroom = #{riBathroom}
		WHERE si_id = #{siId}
		AND ri_id
		= #{riId}
	</update>

	<delete id="deleteFacilitiesByRoomId">
		DELETE FROM t_room_facility_rel WHERE si_id = #{siId}
		AND ri_id = #{riId}
	</delete>

	<delete id="deleteAmenitiesByRoomId">
		DELETE FROM t_room_amenities WHERE si_id = #{siId}
		AND ri_id = #{riId}
	</delete>

	<select id="existsRoomPhoto" resultType="boolean"
		parameterType="com.hotel.domain.RoomPhotoVO">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		FROM
		t_room_photo
		WHERE
		si_id = #{siId}
		AND sp_idx = #{spIdx}
		AND ri_id = #{riId}
	</select>

	<update id="updateRoomPhoto"
		parameterType="com.hotel.domain.RoomPhotoVO">
		UPDATE t_room_photo
		SET sp_url = #{spUrl}
		WHERE si_id =
		#{siId}
		AND sp_idx = #{spIdx}
		AND ri_id = #{riId}
	</update>
	
	<select id="getReservedDates" resultType="java.sql.Date">
		<![CDATA[
			WITH nums AS (
			    SELECT LEVEL - 1 AS n
			    FROM dual
			    CONNECT BY LEVEL <= 366
			)
			SELECT r.sr_checkin + nums.n AS reserved_date
			FROM t_stay_reservation r,
			     nums
			WHERE r.sr_status = 'a'
			  AND r.sr_checkout > TRUNC(SYSDATE)
			  AND r.si_id = #{siId}
			  AND r.ri_id = #{riId}
			  AND nums.n < (r.sr_checkout - r.sr_checkin)
			ORDER BY reserved_date
		]]>
	</select>
	
	<select id="getCheckinDates" resultType="java.sql.Date">
		<![CDATA[
			SELECT DISTINCT sr_checkin AS checkout_only_date
			FROM t_stay_reservation
			WHERE si_id = #{siId} AND ri_id = #{riId} AND sr_status = 'a'
			  AND sr_checkin NOT IN (
			    SELECT sr_checkout
			    FROM t_stay_reservation
			    WHERE si_id = #{siId} AND ri_id = #{riId} AND sr_status = 'a'
			  )
			  AND sr_checkin > TRUNC(SYSDATE)
			ORDER BY checkout_only_date
		]]>
	</select>
	
</mapper>